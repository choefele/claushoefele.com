import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { GetStaticProps, InferGetStaticPropsType } from 'next';
import { VStack, StackDivider } from '@chakra-ui/react';
import { Box, Text, Heading } from '@chakra-ui/react';
import profilePic from '../../public/claus.jpeg';
import { Kenia } from '@next/font/google';

const font = Kenia({
  weight: '400',
  subsets: ['latin'],
});

type Repo = {
  id: string;
  name: string;
};

function Repo(repo: Repo): JSX.Element {
  return <Box>{repo.name}</Box>;
}

function Repos({
  repos,
}: InferGetStaticPropsType<typeof getStaticProps>): JSX.Element {
  return (
    <VStack
      divider={<StackDivider borderColor="gray.200" />}
      spacing={4}
      align="stretch"
    >
      {repos.map((repo) => (
        <Repo key={repo.id} {...repo} />
      ))}
    </VStack>
  );
}

async function loadRepos(): Promise<Repo[]> {
  console.log('loadRepos');
  const res = await fetch('https://api.github.com/users/choefele/repos');
  const data = await res.json();
  const repos: Repo[] | undefined = data.map?.(
    (datum: any): Repo => ({
      id: datum.id,
      name: datum.name,
    })
  );
  console.log(`#repos=${repos?.length}`);

  return repos ?? [];
}

export const getStaticProps: GetStaticProps<{ repos: Repo[] }> = async () => {
  console.log('getStaticProps');
  return {
    props: {
      repos: await loadRepos(),
    },
  };
};

// export const getServerSideProps: GetServerSideProps<{ repos: Repo[] }> = async () => {
//   console.log("getServerSideProps");
//   return {
//     props: {
//       repos: await loadRepos()
//     }
//   }
// }

export default function Blog({
  repos,
}: InferGetStaticPropsType<typeof getStaticProps>): JSX.Element {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Image src={profilePic} alt="Profile" height={200} />
        <Box maxW="32rem">
          <Heading as="h1">Repos</Heading>
          <Text>Text</Text>
          <Repos repos={repos} />
          <Text>
            Get started by editing 123123 <code>pages/index.tsx</code>
          </Text>
          <p className={font.className}>Text p</p>
        </Box>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </>
  );
}
